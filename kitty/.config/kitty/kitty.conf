include ./theme.conf
# vim:fileencoding=utf-8:ft=conf

# Fonts
#$ kitty + list-fonts --psnames | grep Fira
font_family      MonoLisaScript Nerd Font
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 12.0

disable_ligatures never

# Cursor customization
cursor #cccccc

#: The cursor shape can be one of (block, beam, underline)
cursor_shape block
shell_integration no-cursor

#: Defines the thickness of the beam cursor (in pts)
cursor_beam_thickness 1.5

# Scrollback
#: Number of lines of history to keep in memory for scrolling back.
#: Memory is allocated on demand. Negative numbers are (effectively)
#: infinite scrollback. Note that using very large scrollback is not
#: recommended as it can slow down performance of the terminal and
#: also use large amounts of RAM. Instead, consider using
#: scrollback_pager_history_size.
scrollback_lines 2000

#: Modify the amount scrolled by the mouse wheel. Note this is only
#: used for low precision scrolling devices, not for high precision
#: scrolling on platforms such as macOS and Wayland. Use negative
#: numbers to change scroll direction.
# wheel_scroll_multiplier 5.0

# Mouse
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly
url_color #0087bd
url_style curly

#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_modifiers kitty_mod

#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
open_url_with firefox

#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
url_prefixes http https file ftp

#: Detect URLs under the mouse. Detected URLs are highlighted with an
#: underline and the mouse cursor becomes a hand over them. Even if
#: this option is disabled, URLs are still clickable.
detect_urls yes

# Performance tuning
#: Sync screen updates to the refresh rate of the monitor. This
#: prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
#: when scrolling. However, it limits the rendering speed to the
#: refresh rate of your monitor. With a very high speed mouse/high
#: keyboard repeat rate, you may notice some slight input latency. If
#: so, set this to no.
sync_to_monitor yes

# Terminal bell
#: Enable/disable the audio bell. Useful in environments that require
#: silence.
# enable_audio_bell yes

#: Show a bell symbol on the tab if a bell occurs in one of the
#: windows in the tab and the window is not the currently focused
#: window
bell_on_tab yes

# Tab bar
#: Which edge to show the tab bar on, top or bottom
tab_bar_edge top

#: The margin to the left and right of the tab bar (in pts)
# tab_bar_margin_width 0.0

#: The tab bar style, can be one of: fade, separator, powerline, or
#: hidden. In the fade style, each tab's edges fade into the
#: background color, in the separator style, tabs are separated by a
#: configurable separator, and the powerline shows the tabs as a
#: continuous line. If you use the hidden style, you might want to
#: create a mapping for the select_tab action which presents you with
#: a list of tabs and allows for easy switching to a tab.
tab_bar_style powerline

#: The minimum number of tabs that must exist before the tab bar is
#: shown
tab_bar_min_tabs 2

#: The algorithm to use when switching to a tab when the current tab
#: is closed. The default of previous will switch to the last used
#: tab. A value of left will switch to the tab to the left of the
#: closed tab. A value of right will switch to the tab to the right of
#: the closed tab. A value of last will switch to the right-most tab.
tab_switch_strategy previous

#: The separator between tabs in the tab bar when using separator as
#: the tab_bar_style.
# tab_separator " â”‡"

#: A template to render the tab title. The default just renders the
#: title. If you wish to include the tab-index as well, use something
#: like: {index}: {title}. Useful if you have shortcuts mapped for
#: goto_tab N. In addition you can use {layout_name} for the current
#: layout name and {num_windows} for the number of windows in the tab.
#: Note that formatting is done by Python's string formatting
#: machinery, so you can use, for instance, {layout_name[:2].upper()}
#: to show only the first two letters of the layout name, upper-cased.
#: If you want to style the text, you can use styling directives, for
#: example: {fmt.fg.red}red{fmt.fg.default}normal{fmt.bg._00FF00}green
#: bg{fmt.bg.normal}. Similarly, for bold and italic:
#: {fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}.
tab_title_template "{title}"

#: Template to use for active tabs, if not specified falls back to
#: tab_title_template.
# active_tab_title_template none

#: Tab bar colors and styles
# active_tab_foreground   #000
# active_tab_background   #eee
# active_tab_font_style   bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal

#: Background color for the tab bar. Defaults to using the terminal
#: background color.
# tab_bar_background none

# Color scheme
background_opacity 1

#: black
# color0 #000000
# color8 #767676
#: red
# color1 #cc0403
# color9 #f2201f
#: green
# color2  #19cb00
# color10 #23fd00
#: yellow
# color3  #cecb00
# color11 #fffd00
#: blue
# color4  #0d73cc
# color12 #1a8fff
#: magenta
# color5  #cb1ed1
# color13 #fd28ff
#: cyan
# color6  #0dcdcd
# color14 #14ffff
#: white
# color7  #dddddd
# color15 #ffffff
#: Color for marks of type 1
# mark1_foreground black
#: Color for marks of type 1 (light steel blue)
# mark1_background #98d3cb
#: Color for marks of type 2
# mark2_foreground black
#: Color for marks of type 1 (beige)
# mark2_background #f2dcd3
#: Color for marks of type 3
# mark3_foreground black
#: Color for marks of type 1 (violet)
# mark3_background #f274bc

# Advanced
#: Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
#: escape sequences are ignored. Otherwise they become clickable
#: links, that you can click by holding down ctrl+shift and clicking
#: with the mouse. The special value of ``ask`` means that kitty will
#: ask before opening the link.
allow_hyperlinks yes

# OS specific tweaks
#: Choose between Wayland and X11 backends. By default, an appropriate
#: backend based on the system state is chosen automatically. Set it
#: to x11 or wayland to force the choice.
linux_display_server auto

# Keyboard shortcuts
#: The value of kitty_mod is used as the modifier for all default
#: shortcuts, you can change it in your kitty.conf to change the
#: modifiers for all the default shortcuts.
kitty_mod ctrl+shift

# Clipboard
#: There is also a copy_or_interrupt action that can be optionally
#: mapped to Ctrl+c. It will copy only if there is a selection and
#: send an interrupt otherwise. Similarly, copy_and_clear_or_interrupt
#: will copy and clear the selection or send an interrupt if there is
#: no selection.
map kitty_mod+c  copy_to_clipboard
map kitty_mod+v  paste_from_clipboard

# Scrolling
map kitty_mod+up        scroll_line_up
map kitty_mod+k         scroll_line_up
map kitty_mod+down      scroll_line_down
map kitty_mod+j         scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end
map kitty_mod+f         show_scrollback

# Tab management
map kitty_mod+l         next_tab
map kitty_mod+h         previous_tab
map kitty_mod+Enter     new_tab
map kitty_mod+q         close_tab
map kitty_mod+.         move_tab_forward
map kitty_mod+,         move_tab_backward
map kitty_mod+alt+t     set_tab_title

# Font sizes
#: You can change the font size for all top-level kitty OS windows at
#: a time or only the current one.
map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0
map kitty_mod+t         unmap
